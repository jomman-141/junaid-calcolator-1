<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Junaid Calculator</title>
    <style>
      body {
        font-family: Arial, sans-serif;
        background: #f0f0f0;
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
        margin: 0;
      }
      .calculator {
        background: #fff;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
        width: 320px;
      }
      .display {
        background: #e0e0e0;
        padding: 10px;
        border-radius: 5px;
        font-size: 2em;
        text-align: right;
        margin-bottom: 10px;
        height: 60px;
        overflow: auto;
      }
      .history {
        font-size: 0.8em;
        color: #555;
        max-height: 80px;
        overflow: auto;
        margin-bottom: 5px;
      }
      .buttons {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        gap: 10px;
      }
      button {
        padding: 15px;
        font-size: 1.2em;
        border: none;
        border-radius: 5px;
        cursor: pointer;
      }
      button.operator {
        background: #ff9500;
        color: white;
      }
      button.equal {
        grid-column: span 4;
        background: #007bff;
        color: white;
      }
      button.clear {
        grid-column: span 4;
        background: #dc3545;
        color: white;
      }
    </style>
  </head>
  <body>
    <div class="calculator">
      <div class="history" id="history"></div>
      <div class="display" id="display">0</div>
      <div class="buttons">
        <button class="clear" onclick="clearAll()">AC</button>
        <button onclick="inputDigit('7')">7</button>
        <button onclick="inputDigit('8')">8</button>
        <button onclick="inputDigit('9')">9</button>
        <button class="operator" onclick="performOperation('/')">/</button>
        <button onclick="inputDigit('4')">4</button>
        <button onclick="inputDigit('5')">5</button>
        <button onclick="inputDigit('6')">6</button>
        <button class="operator" onclick="performOperation('*')">*</button>
        <button onclick="inputDigit('1')">1</button>
        <button onclick="inputDigit('2')">2</button>
        <button onclick="inputDigit('3')">3</button>
        <button class="operator" onclick="performOperation('-')">-</button>
        <button onclick="inputDigit('0')" style="grid-column: span 2">0</button>
        <button onclick="inputDecimal()">.</button>
        <button class="operator" onclick="performOperation('+')">+</button>
        <button class="equal" onclick="handleEquals()">=</button>
      </div>
    </div>

    <script>
      let display = document.getElementById("display");
      let historyDiv = document.getElementById("history");

      let displayValue = "0";
      let firstOperand = null;
      let operator = null;
      let waitingForSecondOperand = false;
      let history = [];

      function updateDisplay() {
        display.textContent = displayValue;
      }
      function updateHistory() {
        historyDiv.innerHTML = history.join("<br>");
      }

      function inputDigit(digit) {
        if (waitingForSecondOperand) {
          displayValue = digit;
          waitingForSecondOperand = false;
        } else {
          displayValue = displayValue === "0" ? digit : displayValue + digit;
        }
        updateDisplay();
      }

      function inputDecimal() {
        if (waitingForSecondOperand) {
          displayValue = "0.";
          waitingForSecondOperand = false;
          updateDisplay();
          return;
        }
        if (!displayValue.includes(".")) displayValue += ".";
        updateDisplay();
      }

      function clearAll() {
        displayValue = "0";
        firstOperand = null;
        operator = null;
        waitingForSecondOperand = false;
        history = [];
        updateDisplay();
        updateHistory();
      }

      function calculate(first, second, op) {
        switch (op) {
          case "+":
            return first + second;
          case "-":
            return first - second;
          case "*":
            return first * second;
          case "/":
            return second === 0 ? NaN : first / second;
          default:
            return second;
        }
      }

      function performOperation(nextOperator) {
        const inputValue = parseFloat(displayValue);
        if (operator && waitingForSecondOperand) {
          operator = nextOperator;
          return;
        }
        if (firstOperand === null) {
          firstOperand = inputValue;
        } else if (operator) {
          const result = calculate(firstOperand, inputValue, operator);
          history.push(`${firstOperand} ${operator} ${inputValue} = ${result}`);
          displayValue = String(parseFloat(result.toPrecision(12)));
          firstOperand = result;
          updateHistory();
        }
        waitingForSecondOperand = true;
        operator = nextOperator;
        updateDisplay();
      }

      function handleEquals() {
        if (!operator || firstOperand === null) return;
        const inputValue = parseFloat(displayValue);
        const result = calculate(firstOperand, inputValue, operator);
        if (isNaN(result)) {
          displayValue = "Error";
          firstOperand = null;
          operator = null;
          waitingForSecondOperand = false;
        } else {
          history.push(`${firstOperand} ${operator} ${inputValue} = ${result}`);
          displayValue = String(parseFloat(result.toPrecision(12)));
          firstOperand = result;
          operator = null;
          waitingForSecondOperand = true;
        }
        updateDisplay();
        updateHistory();
      }
    </script>
  </body>
</html>
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Junaid Calculator</title>
    <style>
      body {
        font-family: Arial, sans-serif;
        background: #f0f0f0;
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
        margin: 0;
      }
      .calculator {
        background: #fff;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
        width: 320px;
      }
      .display {
        background: #e0e0e0;
        padding: 10px;
        border-radius: 5px;
        font-size: 2em;
        text-align: right;
        margin-bottom: 10px;
        height: 60px;
        overflow: auto;
      }
      .history {
        font-size: 0.8em;
        color: #555;
        max-height: 80px;
        overflow: auto;
        margin-bottom: 5px;
      }
      .buttons {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        gap: 10px;
      }
      button {
        padding: 15px;
        font-size: 1.2em;
        border: none;
        border-radius: 5px;
        cursor: pointer;
      }
      button.operator {
        background: #ff9500;
        color: white;
      }
      button.equal {
        grid-column: span 4;
        background: #007bff;
        color: white;
      }
      button.clear {
        grid-column: span 4;
        background: #dc3545;
        color: white;
      }
    </style>
  </head>
  <body>
    <div class="calculator">
      <div class="history" id="history"></div>
      <div class="display" id="display">0</div>
      <div class="buttons">
        <button class="clear" onclick="clearAll()">AC</button>
        <button onclick="inputDigit('7')">7</button>
        <button onclick="inputDigit('8')">8</button>
        <button onclick="inputDigit('9')">9</button>
        <button class="operator" onclick="performOperation('/')">/</button>
        <button onclick="inputDigit('4')">4</button>
        <button onclick="inputDigit('5')">5</button>
        <button onclick="inputDigit('6')">6</button>
        <button class="operator" onclick="performOperation('*')">*</button>
        <button onclick="inputDigit('1')">1</button>
        <button onclick="inputDigit('2')">2</button>
        <button onclick="inputDigit('3')">3</button>
        <button class="operator" onclick="performOperation('-')">-</button>
        <button onclick="inputDigit('0')" style="grid-column: span 2">0</button>
        <button onclick="inputDecimal()">.</button>
        <button class="operator" onclick="performOperation('+')">+</button>
        <button class="equal" onclick="handleEquals()">=</button>
      </div>
    </div>

    <script>
      let display = document.getElementById("display");
      let historyDiv = document.getElementById("history");

      let displayValue = "0";
      let firstOperand = null;
      let operator = null;
      let waitingForSecondOperand = false;
      let history = [];

      function updateDisplay() {
        display.textContent = displayValue;
      }
      function updateHistory() {
        historyDiv.innerHTML = history.join("<br>");
      }

      function inputDigit(digit) {
        if (waitingForSecondOperand) {
          displayValue = digit;
          waitingForSecondOperand = false;
        } else {
          displayValue = displayValue === "0" ? digit : displayValue + digit;
        }
        updateDisplay();
      }

      function inputDecimal() {
        if (waitingForSecondOperand) {
          displayValue = "0.";
          waitingForSecondOperand = false;
          updateDisplay();
          return;
        }
        if (!displayValue.includes(".")) displayValue += ".";
        updateDisplay();
      }

      function clearAll() {
        displayValue = "0";
        firstOperand = null;
        operator = null;
        waitingForSecondOperand = false;
        history = [];
        updateDisplay();
        updateHistory();
      }

      function calculate(first, second, op) {
        switch (op) {
          case "+":
            return first + second;
          case "-":
            return first - second;
          case "*":
            return first * second;
          case "/":
            return second === 0 ? NaN : first / second;
          default:
            return second;
        }
      }

      function performOperation(nextOperator) {
        const inputValue = parseFloat(displayValue);
        if (operator && waitingForSecondOperand) {
          operator = nextOperator;
          return;
        }
        if (firstOperand === null) {
          firstOperand = inputValue;
        } else if (operator) {
          const result = calculate(firstOperand, inputValue, operator);
          history.push(`${firstOperand} ${operator} ${inputValue} = ${result}`);
          displayValue = String(parseFloat(result.toPrecision(12)));
          firstOperand = result;
          updateHistory();
        }
        waitingForSecondOperand = true;
        operator = nextOperator;
        updateDisplay();
      }

      function handleEquals() {
        if (!operator || firstOperand === null) return;
        const inputValue = parseFloat(displayValue);
        const result = calculate(firstOperand, inputValue, operator);
        if (isNaN(result)) {
          displayValue = "Error";
          firstOperand = null;
          operator = null;
          waitingForSecondOperand = false;
        } else {
          history.push(`${firstOperand} ${operator} ${inputValue} = ${result}`);
          displayValue = String(parseFloat(result.toPrecision(12)));
          firstOperand = result;
          operator = null;
          waitingForSecondOperand = true;
        }
        updateDisplay();
        updateHistory();
      }
    </script>
  </body>
</html>
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Junaid Calculator</title>
    <style>
      body {
        font-family: Arial, sans-serif;
        background: #f0f0f0;
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
        margin: 0;
      }
      .calculator {
        background: #fff;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
        width: 320px;
      }
      .display {
        background: #e0e0e0;
        padding: 10px;
        border-radius: 5px;
        font-size: 2em;
        text-align: right;
        margin-bottom: 10px;
        height: 60px;
        overflow: auto;
      }
      .history {
        font-size: 0.8em;
        color: #555;
        max-height: 80px;
        overflow: auto;
        margin-bottom: 5px;
      }
      .buttons {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        gap: 10px;
      }
      button {
        padding: 15px;
        font-size: 1.2em;
        border: none;
        border-radius: 5px;
        cursor: pointer;
      }
      button.operator {
        background: #ff9500;
        color: white;
      }
      button.equal {
        grid-column: span 4;
        background: #007bff;
        color: white;
      }
      button.clear {
        grid-column: span 4;
        background: #dc3545;
        color: white;
      }
    </style>
  </head>
  <body>
    <div class="calculator">
      <div class="history" id="history"></div>
      <div class="display" id="display">0</div>
      <div class="buttons">
        <button class="clear" onclick="clearAll()">AC</button>
        <button onclick="inputDigit('7')">7</button>
        <button onclick="inputDigit('8')">8</button>
        <button onclick="inputDigit('9')">9</button>
        <button class="operator" onclick="performOperation('/')">/</button>
        <button onclick="inputDigit('4')">4</button>
        <button onclick="inputDigit('5')">5</button>
        <button onclick="inputDigit('6')">6</button>
        <button class="operator" onclick="performOperation('*')">*</button>
        <button onclick="inputDigit('1')">1</button>
        <button onclick="inputDigit('2')">2</button>
        <button onclick="inputDigit('3')">3</button>
        <button class="operator" onclick="performOperation('-')">-</button>
        <button onclick="inputDigit('0')" style="grid-column: span 2">0</button>
        <button onclick="inputDecimal()">.</button>
        <button class="operator" onclick="performOperation('+')">+</button>
        <button class="equal" onclick="handleEquals()">=</button>
      </div>
    </div>

    <script>
      let display = document.getElementById("display");
      let historyDiv = document.getElementById("history");

      let displayValue = "0";
      let firstOperand = null;
      let operator = null;
      let waitingForSecondOperand = false;
      let history = [];

      function updateDisplay() {
        display.textContent = displayValue;
      }
      function updateHistory() {
        historyDiv.innerHTML = history.join("<br>");
      }

      function inputDigit(digit) {
        if (waitingForSecondOperand) {
          displayValue = digit;
          waitingForSecondOperand = false;
        } else {
          displayValue = displayValue === "0" ? digit : displayValue + digit;
        }
        updateDisplay();
      }

      function inputDecimal() {
        if (waitingForSecondOperand) {
          displayValue = "0.";
          waitingForSecondOperand = false;
          updateDisplay();
          return;
        }
        if (!displayValue.includes(".")) displayValue += ".";
        updateDisplay();
      }

      function clearAll() {
        displayValue = "0";
        firstOperand = null;
        operator = null;
        waitingForSecondOperand = false;
        history = [];
        updateDisplay();
        updateHistory();
      }

      function calculate(first, second, op) {
        switch (op) {
          case "+":
            return first + second;
          case "-":
            return first - second;
          case "*":
            return first * second;
          case "/":
            return second === 0 ? NaN : first / second;
          default:
            return second;
        }
      }

      function performOperation(nextOperator) {
        const inputValue = parseFloat(displayValue);
        if (operator && waitingForSecondOperand) {
          operator = nextOperator;
          return;
        }
        if (firstOperand === null) {
          firstOperand = inputValue;
        } else if (operator) {
          const result = calculate(firstOperand, inputValue, operator);
          history.push(`${firstOperand} ${operator} ${inputValue} = ${result}`);
          displayValue = String(parseFloat(result.toPrecision(12)));
          firstOperand = result;
          updateHistory();
        }
        waitingForSecondOperand = true;
        operator = nextOperator;
        updateDisplay();
      }

      function handleEquals() {
        if (!operator || firstOperand === null) return;
        const inputValue = parseFloat(displayValue);
        const result = calculate(firstOperand, inputValue, operator);
        if (isNaN(result)) {
          displayValue = "Error";
          firstOperand = null;
          operator = null;
          waitingForSecondOperand = false;
        } else {
          history.push(`${firstOperand} ${operator} ${inputValue} = ${result}`);
          displayValue = String(parseFloat(result.toPrecision(12)));
          firstOperand = result;
          operator = null;
          waitingForSecondOperand = true;
        }
        updateDisplay();
        updateHistory();
      }
    </script>
  </body>
</html>
